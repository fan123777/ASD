#pragma once

namespace nsAlgorithmsOnGraphs
{
	// Минимальные остовные деревья
	namespace nsMinimumSpanningTree
	{
		void main();
		void test();

		// Модели графов, в которых мы связываем веса (weights) или стоимости(costs) с каждым ребром, используются во многих приложениях.
		// Естественно, в таких ситуациях возникают вопросы, касающиеся различных аспектов минимизации стоимости.
		// Мы будем изучать алгоритмы решения двух задач такого рода:
		// - определение пути с наименьшей стоимостью, соединяющего все точки
		// - отыскание пути наименьшей стоимости, соединяющего две заданных точки.
		// Первый тип алгоритма применяется для решения задач на неориентированных графах, которые представляют такие объекты как электрические цепи, находит минимальное остовное дерево(minimum spanning tree);
		// Второй тип алгоритма, применяемый для решения задач на орграфах, которые представляют такие объекты, как карты авиарейсов, определяет кратчайшие пути(shortest path), и они являются темой обсуждений в главе 21.
		// В этом разделе мы будем изучать три классических алгоритма, которые легко понять на концептуальном уровне;
		// Определение 20.1. Дерево MST (minimal spanning tree - минимальное остовное дерево) взвешенного графа есть остовное дерево, вес которого(сумма весов его ребер) не превосходит вес любого другого остовного дерева.
		// Если все веса положительны, достаточно определить дерево MST как множество ребер с минимальным общим весом, которые соединяют все вершины, ибо такое множество и должно образовать остовное дерево.
		// Если ребра могут иметь равные веса, минимальное остовное дерево может не быть единственным.
		// В данной главе мы будем работать исключительно с неориентированными графами.
		
		// 20.1. Представления 
		// ...238
	}
}
